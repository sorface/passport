server:
  port: 8080

spring:
  application:
    name: oidc-idp

  data.redis:
    client-type: jedis
    database: 5
    host: localhost
    port: 6379
    username: default
    password: testpassword
    jedis.pool:
      max-active: 100
      max-idle: 15


  datasource:
    url: "*****"
    username: "username"
    password: "password"
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        show_sql: false
        format_sql: false

  session:
    timeout: 5d
    redis:
      flush-mode: on_save
      namespace: "passport"
      save-mode: on_set_attribute
      repository-type: indexed
      cleanup-cron: 0 * * * * *
      configure-action: notify_keyspace_events

  liquibase:
    contexts: production
    change-log: migration/master.yaml
    enabled: true

  mail:
    username: 'welcome@sorface.com'
    password: 'nphnsnxgcimstkxj'
    port: 465
    host: smtp.yandex.ru
    properties:
      mail.transport.protocol: smtp
      mail.smtp.auth: true
      mail.smtp.starttls.enable: true
      mail.smtp.ssl.enable: true

  graphql:
    graphiql:
      enabled: false
      path: /graphiql

  security:
    oauth2:
      client:
        registration:
          github:
            client-name: github
            client-id: ${OAUTH_CLIENT_GITHUB_ID}
            client-secret: ${OAUTH_CLIENT_GITHUB_SECRET}

          yandex:
            client-name: yandex
            client-id: ${OAUTH_CLIENT_YANDEX_ID}
            client-secret: ${OAUTH_CLIENT_YANDEX_SECRET}
            authorization-grant-type: authorization_code
            provider: yandex
            redirect-uri: ${OAUTH_CLIENT_YANDEX_REDIRECT_URL}

          twitch:
            client-name: twitch
            client-id: ${OAUTH_CLIENT_TWITCH_ID}
            client-secret: ${OAUTH_CLIENT_TWITCH_SECRET}
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            scope:
              - user:read:email
            provider: twitch
            redirect-uri: ${OAUTH_CLIENT_TWITCH_REDIRECT_URL}

        provider:
          yandex:
            authorization-uri: https://oauth.yandex.ru/authorize
            token-uri: https://oauth.yandex.ru/token
            user-name-attribute: default_email
            userInfoUri: https://login.yandex.ru/info
          twitch:
            authorization-uri: https://id.twitch.tv/oauth2/authorize
            token-uri: https://id.twitch.tv/oauth2/token
            userInfoUri: https://api.twitch.tv/helix/users/
            user-info-authentication-method: GET
            user-name-attribute: data

idp:
  csrf.cookie:
    domain: 'localhost'
    path: '/'
    name: 'x_csrf_token'
    http-only: false
    secure: false

  oidc:
    url: http://localhost:${server.port}

  endpoint:
    login-path: '/api/login'
    frontend:
      account-page: 'http://localhost:9030/account'

logging:
  level:
    root: warn

--- # spring development envs

spring:
  config:
    activate:
      on-profile: development

  graphql:
    graphiql:
      enabled: true

  datasource:
    url: "jdbc:h2:mem:idp;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;AUTO_RECONNECT=TRUE;MODE=PostgreSQL;"
    username: "username"
    password: "password"
    driver-class-name: org.h2.Driver

  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        show_sql: true
        format_sql: true

  liquibase:
    contexts: development
    change-log: migration/master.yaml
    enabled: true

  h2:
    console:
      enabled: true
      path: /h2-console

--- # spring development envs

spring:
  config:
    activate:
      on-profile: sandbox

  graphql:
    graphiql:
      enabled: true

  datasource:
    url: jdbc:postgresql://localhost:5432/idp
    username: user
    password: user
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        show_sql: true
        format_sql: true

  liquibase:
    contexts: development
    change-log: migration/master.yaml
    enabled: true

logging:
  level:
    by.sorface.idp: debug
    root: warn
